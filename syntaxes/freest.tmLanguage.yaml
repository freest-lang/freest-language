# Yaml to Json:
# npx js-yaml syntaxes/freest.tmLanguage.yaml > syntaxes/freest.tmLanguage.json
# If js-yaml is not yet installed do:
# npm install

schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
scopeName: source.fst
name: FreeST
fileTypes: 
  fst
  freest

patterns:
  - include: '#Comment'
  - include: '#Type'
  - include: '#Keyword'
  - include: '#Literal'
  # Just adding function type definition, at least function name
  - match: "(^[a-z][a-zA-Z0-9_.-\\\\']*)\\s*:" # ..yes, ':' is also captured
    captures:
      1: 
        name: entity.name.function.freest

repository: 

  ######################################################
  ###################### COMMENTS ######################
  ######################################################
  
  Comment: 
    patterns:
      - include: '#BlockComment'
      - include: '#LineComment'

  BlockComment:
    patterns:
      - comment: Block comment
        name: comment.block.double-dash.freest
        contentName: comment.block.freest
        begin: \{-
        end: -\}
        patterns:
          - include: '#Comment'
  
  LineComment:
    patterns: 
      - comment: Line comments
        name: comment.line.double-dash.freest
        match: --.*
	
  ######################################################
  ######################## TYPE ########################
  ######################################################

  Type:
    patterns:
      - include: '#BasicType'
      - include: '#SessionType'

  BasicType:
    patterns:
      - name: entity.name.type.freest
        match: \b(Int|Char|Bool|String)\b
  
  SessionType:
    patterns:
      - name: entity.name.type.session.freest
        match: \b(!|\?|\+|&|dualof|MU|ML|TU|TL|SU|SL|Skip)\b

  ######################################################
  ####################### KEYWORD ######################
  ######################################################

  Keyword:
    patterns:
      - include: '#ControlKeyword'
      # - include: '#OperatorKeyword'
      - include: '#SessionKeyword'
      - include: '#TypeKeyword'
  
  ControlKeyword:
    patterns:
      - name: keyword.control.freest
        match: \b(if|then|else|case|of|match|with|let|in)\b
  
  # OperatorKeyword:
  #   patterns:
  #     - name: keyword.operator.freest
  #       match: 

  SessionKeyword:
    patterns:
      - name: keyword.other.session.freest
        match: \b(new|send|receive|select|fork)\b

  TypeKeyword:
    patterns:
      - name: keyword.other.type.freest
        match: \b(forall|rec|type|data)\b

  ######################################################
  ####################### LITERAL ######################
  ######################################################

  Literal:
    patterns:
      - include: '#String'
      - include: '#Constructor'

  String:
    patterns:
      - name: string.quoted.double.freest
        match: \".*?\"
  
  Constructor:
    patterns:
      - name: entity.name.tag.freest
        match: \b[A-Z][a-zA-Z0-9_.-]*\b